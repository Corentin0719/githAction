name: Build App

on:
    push:
        branches:
        - master

jobs:
    Analysis:
            runs-on: ubuntu-latest

            steps:
              - uses: actions/checkout@v2
              - name: Install NPM dependencies
                run: |
                  npm install --production --unsafe-perm 
                  
              - name: Analyze with SonarCloud         

                # You can pin the exact commit or the version.
                # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
                uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
                env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
                with:
                  # Additional arguments for the sonarcloud scanner
                  args:             
                    # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
                    # mandatory
                    -Dsonar.projectKey=Corentin0719_githAction
                    -Dsonar.organization=corentin0719
              
              - uses: sburris/dependency-check-action@master
                with:
                  Project-Name: TestApp
              
                #check vulnerabilities 
              - name: Archive dependency check reports
                uses: actions/upload-artifact@v1
                with:
                    name: reports
                    path: .
                    
              - name: Run Trivy vulnerability scanner
                uses: aquasecurity/trivy-action@master
                with:
                  image-ref: 'docker.io/<your-username>/<your-image>:${{ github.sha }}'
                  format: 'table'
                  exit-code: '1'
                  ignore-unfixed: true
                  vuln-type: 'os,library'
                  severity: 'CRITICAL,HIGH'


    build:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: build-push
          uses: docker/build-push-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            registry: docker.io
            repository: corentin0719/cd
            tag_with_sha: true


            
